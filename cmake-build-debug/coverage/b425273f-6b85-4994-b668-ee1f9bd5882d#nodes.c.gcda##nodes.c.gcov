        -:    0:Source:/home/ollie/CLionProjects/Compiler_2.0/Lexer_Parser_Files/nodes.c
        -:    0:Graph:/home/ollie/CLionProjects/Compiler_2.0/cmake-build-debug/CMakeFiles/Compiler_2_0.dir/Lexer_Parser_Files/nodes.c.gcno
        -:    0:Data:/home/ollie/CLionProjects/Compiler_2.0/cmake-build-debug/CMakeFiles/Compiler_2_0.dir/Lexer_Parser_Files/nodes.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include "nodes.h"
        -:    4:#include "Lexer_Parser_Files/C.tab.h"
        -:    5:
        9:    6:NODE* make_node(int t, NODE* left, NODE* right)
        9:    6-block  0
        -:    7:{
        9:    8:    NODE *a = (NODE*)malloc(sizeof(NODE));
        9:    9:    if (a==NULL) {
        9:    9-block  0
    #####:   10:      perror("Cannot make node");
    $$$$$:   10-block  0
    #####:   11:      exit(1);
        -:   12:    }
        9:   13:    a->type = t;
        9:   14:    a->left = left;
        9:   15:    a->right = right;
        9:   16:    return a;
        9:   16-block  0
        -:   17:}
        -:   18:
        8:   19:NODE* make_leaf(TOKEN* l)
        8:   19-block  0
        -:   20:{
        8:   21:    NODE *a = (NODE*)malloc(sizeof(NODE));
        -:   22:/*     printf("make_leaf: %p -> %p\n", l, a); */
        8:   23:    if (a==NULL) {
        8:   23-block  0
    #####:   24:      perror("Cannot make leaf");
    $$$$$:   24-block  0
    #####:   25:      exit(1);
        -:   26:    }
        8:   27:    a->type = LEAF;
        8:   28:    a->left = (NODE*)l;
        8:   29:    a->right = NULL;
        8:   30:    return a;
        8:   30-block  0
        -:   31:}
